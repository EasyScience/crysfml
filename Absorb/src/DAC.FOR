C -------------------------------------------------------------
c
C THIS FILE CONTAINS THE SUBROUTINES AND FUNCTIONS FOR MAKING 
C DIAMOND-ANVIL CELL CORRECTIONS
C
C
C
	SUBROUTINE CHECK_SHADOW(JSHAD)
C
C SUBROUTINE TO TEST FOR ANY PART OF CRYSTAL SHADOWED, BY CHECKING
C FOR THE CORNERS BEING SHADOWED
C
C IF ALL CORNERS ILLUMINATED BY THIS BEAM THEN CRYSTAL MUST BE
C COMPLETELY ILLUMINATED, SO JSHAD SET TO 1
C
C IF SOME CORNERS SHADOWED, THEN CRYSTAL IS PARTLY SHADOWED, 
C SO SETS JSHAD TO 0
C
C IF ALL CORNERS SHADOWED, THEN CRYSTAL IS COMPLETELY SHADOWED, 
C SO SETS JSHAD TO -1
C
	INCLUDE 'Crystalmodel.inc'

	real XTEST(3)
C
	ICORNS=0
	IXMIN=0
	IXMAX=0
C
C LOOP OVER THE CORNERS, COUNTING THOSE PARTIALLY SHADOWED
C
	DO  I=1,NCORN
	  DO J=1,3
	    XTEST(J)=CORNER(I,J)
	  ENDDO
	  IF(ISHADOW(XTEST) .LT. 0)ICORNS=ICORNS+1
	ENDDO
C
C NOW TEST TO SEE HOW MANY CORNERS FULLY ILLUMINATED BY BOTH BEAMS
C
	JSHAD=0
	IF(ICORNS .EQ. 0)JSHAD=1		! ALL CORNERS ILLUMINATED
	IF(ICORNS .EQ. NCORN)JSHAD=-1		! NO CORNERS ILLUMINATED
C
	RETURN
	END
C
	function diabs(psi_in,ia)
c
c function to calculate transmission through various diamond-anvil cells
c for beam at angle psi. Value of function returned is
c for application to I.
C NOTE THAT PSI IS ANGLE IN RADIANS!!!
c
	include 'dac.inc'
c
c dimensions of cell for flat plate case in mm in /dacsize/
c
c new absorption coeffs inserted for Be and diamond 9-Dec-1999
c  values from Creagh + McCauley, I Tables vol C
C        mu_dia=0.2025           ! mm-1
C       mu_be=0.0473
C NOW SUPPLIED VIA COMMON FROM READ_DAC ROUTINE: JULY 2002
C ADDED DAC TYPE 5 JULY 2002: EITHER A TABLE OR A 1 PARAMETER CURVE
C

	PSI=ABS(PSI_IN)			! SAFETY: PSI_IN SHOULD BE POSITIVE AND < PI/2

C
c
c jump on idac type
c
	diabs=1.
	if(idac .eq. 0)return
	goto(100,200,300,400,500),idac
c
c Merrill-Bassett cell with Be seats (from PDP-11 code by LWF)
c
300	psit=abs(psi)*45./atan(1.0)
c deal with psit > 90 (ie cell at approx phi=180
c
	if(psit .gt. 90.)psit=180.-psit
	if(psit .lt. 2.)then
	  	diabs=1.0-0.005*psit
	else if(psit .lt. 9.6)then
		diabs=1.04-0.02759*psit
	else if(psit .lt. 16.)then
		diabs=0.855-0.00724*psit
	else
		diabs=0.79-0.00333*psit
	endif
	diabs=1./sqrt(diabs)
	return
c
c DXR-4 cell: based upon drawings of cell components supplied by Diacell
c
200	rb=10.5
	tb=4.7
	delta=rb-tb-tdiamond(IA)
	rdel2=(rb/delta)**2.
	cospsi=abs(cos(psi))
c
c path in diamond
c
	xa=tdiamond(IA)/cospsi
c
c path in be+anvil
c
	term= cospsi*cospsi -1. + rdel2
	xb= delta*(sqrt(term)-cospsi)
c
c path in be
c
	tbe=xb-xa
c
c absorption 
c
	dabs= exp(mu_dia(IA)*xa)
	dbe = exp(mu_be(IA)*tbe)
	diabs=dabs*dbe
	return
c
c Cell with Be plugs (ie flat plate case)
c
100	cospsi=abs(cos(psi))
c
c path in diamond
c
	xa=tdiamond(IA)/cospsi
c
c diamond absorption
c
	dabs= exp(mu_dia(IA)*xa)
c
c beryllium absorption
c
	xb=tberyl(IA)/cospsi
	dbe=exp(mu_be(IA)*xb)
c
c overall
	diabs=dabs*dbe
	return
c
c Merrill Bassett cell with conical holes
c
400	cospsi=abs(cos(psi))
c
c path in diamond
c
	xa=tdiamond(IA)/cospsi
c
c diamond absorption
c
	dabs= exp(mu_dia(IA)*xa)
c
c beryllium absorption
c
	if(cospsi .gt. 0.990)then
	  dbe = 1.		! beam out through hole
	else
	  xb=tberyl(IA)/cospsi
	  dbe=exp(mu_be(IA)*xb)
	endif
c
c overall
	diabs=dabs*dbe
c
	return
C
C USER-SUPPLIED ABSORPTION CURVE FOR A HALF CELL
C EITHER AS A SINGLE VALUE (FLAGGED BY NTERMS_PSI= -1) FOR EQUATION
C OR A TABLE OF TRANSMISSION VALUES WITH PSI IN DEGREES
C  (WHEREAS PSI IN THIS ROUTINE IS IN RADIANS)
C
500	IF(NTERMS_PSI .EQ. -1)THEN
		CPSI=ABS(COS(PSI))			! HANDLES ROTATED CELL WHEN PSI~180

		DIABS=EXP(ABSPSI_PAR(IA)*(1.0/CPSI -1.0))
	ELSE
		PSIDATA=PSI*45.0/ATAN(1.0)
		IF(COS(PSI) .LT. 0)PSIDATA=180.- ABS(PSIDATA)		!CELL AT PHI=180.
			PSIDATA=ABS(PSIDATA)		! ONLY POSITIVE VALUES OF PSI IN TABLE
			IF(PSIDATA .LE. PSIABS(1,1))THEN
				DIABS=1./PSIABS(1+IA,1)			! PSI LESS THAN MIN IN TABLE
				RETURN
			ENDIF
C	
		DO I=1,NTERMS_PSI
			IF(PSIDATA .LE. PSIABS(1,I))GOTO 550
		ENDDO
C
C HERE IF OFF END OF TABLE
		DIABS=1./PSIABS(1+IA,NTERMS_PSI)			
		RETURN
C
C HERE IF IN TABLE: VALUE LIES BETWEEN TABLE VALUES I-1 AND I	
C  DO LINEAR INTERPOLATION
550		DIABS=1.0/(PSIABS(1+IA,I-1) + (PSIDATA-PSIABS(1,I-1))*
	1		(PSIABS(1+IA,I)-PSIABS(1+IA,I-1))/
     1								(PSIABS(1,I)-PSIABS(1,I-1)))
	ENDIF
	RETURN
	end
C
c 
C
	FUNCTION ISHADOW(X)
C
C FUNCTION TO TEST POINT WITH COORDINATES IN X IS SHADOWED BY EITHER
C BEAM. RETURNS:	 0 IF ILLUMINATED BY BOTH BEAMS, 
C			-1 IF ILLUMINATED BY D-BEAM ONLY
C			-2 IF ILLUMINATED BY I-BEAM ONLY
C			-3 IF ILLUMINATED BY NEITHER BEAM
C			-4 IF AT LEAST ONE BEAM PARALLEL TO ANVIL FACES
C RECODED 2001 FOR BUSING-LEVY COORDINATES
C CHANGED JAN 2003 TO CIRCULAR GASKET HOLE
C
	REAL X(3),XPRO(2),ZPRO(2)
	include 'reflection.inc'
	include 'dac.inc'
C
C COMMON DACPATH:		PARI IS TOTAL PATHLENGTH OF I-BEAM INSIDE CELL
C					PARD IS TOTAL PATHLENGTH OF D-BEAM INSIDE CELL
C					GIPATH IS PATHLENGTH OF I-BEAM IN 
C					GIPATH IS PATHLENGTH OF D-BEAM IN GASKET
C
	
	ISHADOW=0
C
C CHECK FOR BEAMS CLOSE TO PARALLEL TO ANVILS: (IE PERPENDICULAR TO Y-AXIS = CELL AXIS)
C    THE LIMIT IS SET HERE AS 80DEG, 
	IF(ABS(COSP(2)) .LT. 0.174 .OR. ABS(COSD(2)) .LT. 0.174)THEN
		ISHADOW=-4
		RETURN
	ENDIF
C
C DEAL WITH CELL ROTATED TO BRING BEAMS THROUGH ARBITARY ANVIL
C
	IF(COSP(2) .LT. 0.)THEN
		PARI=X(2)/COSP(2)			! NORMAL CASE
	ELSE
		PARI=(X(2)-TG)/COSP(2)			! I-BEAM IN D-ANVIL
	ENDIF							! PARI IS THE PATH LENGTH OF THE I-BEAM
	XPRO(1)= PARI*COSP(1)			! IN THE DAC
	ZPRO(1)= PARI*COSP(3)
	IF(COSD(2) .GT. 0.)THEN
		PARD=(X(2)-TG)/COSD(2)			! NORMAL CASE
	ELSE
		PARD=X(2)/COSD(2)			! D-BEAM IN I-ANVIL
	ENDIF
	XPRO(2)= PARD*COSD(1)	! COSINE TO  X AXIS HANDLES SENSE OF OFFSET
	ZPRO(2)= PARD*COSD(3)
	PARI=ABS(PARI)			! SET ABS VALUES FOR USE IN ABSORB_FILLG
	PARD=ABS(PARD)
C
C LOOP OVER INCIDENT AND DIFFRACTED BEAMS
C
	DO I=1,2
C
C TRANSFORM X,Z COORDINATES BY ZERO OFFSETS
C (IE GET DELTA-X AND DELTA-Z OF POINT FROM CENTRE OF PROJECTED HOLE)
C
	  XS=X(1)-XPRO(I)
	  ZS=X(3)-ZPRO(I)
C
C EVALUATE test value
C
	  TESTVAL= XS**2. + ZS**2. - RGASKET**2.
C
C CHECK FOR ILLUMINATION: ERROR VALUE WAS 1.0E-5 -CHANGED TO 1.0E-3
C
	  IF(TESTVAL .GT. 1.0E-3)ISHADOW=ISHADOW-I
C  
	ENDDO
	RETURN
	END
C
C
	FUNCTION GASKETABS(X)
C
C FUNCTION TO  CALCULATE ABSORPTION OF BOTH BEAMS BY GASKET 
C FOR POINT WITH COORDINATES IN X. THE Y-COMPONENT OF THE PATH IN THE
C GASKET IS CALCULATED BY FINDING THE AMOUNT THE Y-COORD OF THE POINT
C HAS TO BE MOVED (ALONG THE BEAM) UNTIL IT BECOMES ILLUMINATED.
C
C FUNCTION RETURNS EXP(-MU*PATH) 
C
C
C RECODED JULY 2001 FOR BUSING-LEVY COORDINATES
C
	REAL X(3),XTEST(3)
	include 'reflection.inc'
	include 'dac.inc'
	include 'files.inc'
	CHARACTER ETEXT*256
C
C START BY TESTING POINT FOR SHADOWING AT ALL BY EITHER BEAM
C
	IFLAG=ISHADOW(X)
C
	IF(IFLAG .EQ. 0)THEN
C
C EASY CASE: POINT NOT SHADOWED BY EITHER BEAM
C
		GASKETABS=1.0
		GIPATH=0.
		GDPATH=0.
		RETURN
	ENDIF
	IF(IFLAG .EQ. -4)THEN
C
C EASY CASE: ONE OF THE BEAMS PARALLEL TO ANVIL FACES - NO ILLUMINATION
C
		GASKETABS=0.0
		RETURN
	ENDIF
C
C LAST EASY CASE: COMPLETELY OPAQUE GASKET
	IF(IOPAQUE .EQ. 1)THEN
		GASKETABS=0.0
		RETURN
	ENDIF

C
C SOME SHADOWING BY ONE OR BOTH BEAMS 
C
	DELY=0.01*TG					! SET INCREMENT STEP
	GIPATH=0.
	GDPATH=0.					! INITIALISE PATHS 
C
	IF(IFLAG .EQ. -2)GOTO100
C
C DEAL WITH INCIDENT BEAM SHADOWED: SET INCREMENT DIRECTION
C NOW RECODED FOR BUSING-LEVY
C
	IF(COSP(2) .LT. 0.)THEN
		INCR= -1				! I-BEAM IN I-ANVIL
	ELSE
		INCR= +1				! I-BEAM IN D-ANVIL
	ENDIF
C
C TRANSFER ORIGINAL COORDS INTO XTEST
C
	DO I=1,3
		XTEST(I)=X(I)
	ENDDO
C
C START LOOP OF INCREMENT AND TEST
C
10	ITEST=ISHADOW(XTEST)
	IF(ITEST .EQ. 0 .OR. ITEST .EQ. -2)GOTO20
	XTEST(2)=XTEST(2)+INCR*DELY
	IF(XTEST(2) .GT. -1.*DELY .AND. XTEST(2) .LT. TG+DELY)GOTO10
C 
C HERE IF FAULT
	WRITE(ETEXT,15)X,XTEST(2),INCR
15	FORMAT('FAULT IN GASKETABS, I-BEAM '
     1  'X = ',3F10.4,' XTEST(2) = ',F10.4,' INCR = ',I2)
	CALL ERROR(ETEXT)
	RETURN
C
C GOT POINT RE-ILLUMINATED: CALCULATE INCIDENT BEAM PATH
C
20	GIPATH=ABS(XTEST(2)-X(2))/ABS(COSP(2))
C
C***********************************************************************
C START ON DIFFRACTED BEAM
C
100	IF(IFLAG .EQ. -1)GOTO200
C
C DEAL WITH DIFFRACTED BEAM SHADOWED: SET INCREMENT DIRECTION
C
	IF(COSD(2) .GT. 0.)THEN
		INCR= +1				! D-BEAM IN D-ANVIL
	ELSE
		INCR= -1				! D-BEAM IN I-ANVIL
	ENDIF
C
C TRANSFER ORIGINAL COORDS INTO XTEST
C
	DO I=1,3
		XTEST(I)=X(I)
	ENDDO
C
C START LOOP OF INCREMENT AND TEST
C
110	ITEST=ISHADOW(XTEST)
	IF(ITEST .EQ. 0 .OR. ITEST .EQ. -1)GOTO120
	XTEST(2)=XTEST(2)+INCR*DELY
	IF(XTEST(2) .GT. -1.*DELY .AND. XTEST(2) .LT. TG+DELY)GOTO110
C 
C HERE IF FAULT
	WRITE(ETEXT,115)X,XTEST(2),INCR
115	FORMAT(' ***FAULT IN GASKETABS, D-BEAM, ' 
     1  'X = ',3F10.4,' XTEST(2) = ',F10.4,' INCR = ',I2)
	CALL ERROR(ETEXT)
	RETURN
C
C GOT POINT RE-ILLUMINATED: CALCULATE DIFFRACTED BEAM PATH
C
120	GDPATH=ABS(XTEST(2)-X(2))/ABS(COSD(2))
C
C HERE ON COMPLETION
C
200	GPATH=GIPATH+GDPATH
	GASKETABS=EXP(-1.*GASKETMU*GPATH)
C
	RETURN
	END
C
C
C
	FUNCTION ABS_MEDIA(X,PATH)
C
C FUNCTION TO CALCULATE PATH LENGTH IN MEDIA IN CELL
C FUNCTION RETURNS EXP(-MU_MEDIA*PATH) 
C
C
	REAL X(3),PATH		! COORDS OF POINT AND PATH LENGTH IN CRYSTAL
	include 'reflection.inc'
	include 'files.inc'
	include 'dac.inc'
C
C START BY TESTING POINT FOR SHADOWING AT ALL BY EITHER BEAM
C
	IFLAG=ISHADOW(X)
C
	IF(IFLAG .EQ. -4)THEN
C
C EASY CASE: ONE OF THE BEAMS CLOSE TO PARALLEL TO ANVIL FACES - 
C NO ILLUMINATION 
C
		ABS_MEDIA=0.0
		RETURN
	ENDIF
C
C LAST EASY CASE: COMPLETELY OPAQUE GASKET: SET MEDIA ALSO ZERO
	IF(IOPAQUE .EQ. 1)THEN
		ABS_MEDIA=0.0
		RETURN
	ENDIF
	PATHMED=PARI+PARD-GIPATH-GDPATH-PATH
	IF(PATHMED .LT. -0.5)THEN
		WRITE(IPRT,10)PATHMED
10		FORMAT(' ******WARNING: NEXT REFLECTION HAS PATH',
	1' IN PRESSURE MEDIUM CALCULATED AS ',F6.1,' MICRONS')
		ABS_MEDIA=1.
	ELSE
		ABS_MEDIA=EXP(-1.0*MU_MEDIA*PATHMED)
	ENDIF
	RETURN
	END
