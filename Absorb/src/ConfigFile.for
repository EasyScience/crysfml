C*******************************************************************	
C	
C   SUBROUTINES TO HANDLE THE CONFIG FILE FOR ABSORB
C
C*******************************************************************
	SUBROUTINE OPEN_DEFAULT(IERR)
	USE KERNEL32
	USE DFLIB
C
C RETURNS IERR = 0 IF EXISTS AND HAS BEEN OPENED
C		IERR = 1 IF DOES NOT EXIST AND HAS BEEN CREATED
C		IERR =-1 IF CANNOT OPEN FILE
C
C USE IDEF_UNIT 		
	CHARACTER*255 NAME,DEFAULTNAME
	COMMON/DEFAULTFILE/IDEF_UNIT
C
	IDEF_UNIT=31
	IERR = -1
C
C GET LOCATION OF EXE
	ILEN=GETMODULEFILENAME(NULL,NAME,255)
	IF(ILEN .EQ. 0)RETURN
C
	I=INDEX(NAME,'\',BACK=.TRUE.)			! BUILD EXE DIR NAME
	DEFAULTNAME=NAME(1:I)//'Absorb_config.dat'
C
C
	OPEN(UNIT=IDEF_UNIT,FILE=DEFAULTNAME,STATUS='OLD',ERR=90,
	1CARRIAGECONTROL='FORTRAN')
C
C DEFAULT FILE EXISTS: READ IT
c
	IERR=0
	RETURN
C
C HERE IF DEFAULT FILE DOES NOT EXIST: TRY TO CREATE IT
90	OPEN(UNIT=IDEF_UNIT,FILE=DEFAULTNAME,STATUS='NEW',ERR=99,
	1CARRIAGECONTROL='FORTRAN')
	IERR=1
	RETURN
C
C HERE IF DOUBLE ERROR - GIVE UP
99	RETURN
	END

C****************************************************************************
C
	SUBROUTINE CLOSE_DEFAULT
	COMMON/DEFAULTFILE/IDEF_UNIT
	CLOSE(UNIT=IDEF_UNIT)
	RETURN
	END
C
C****************************************************************************
C
	SUBROUTINE WRITE_CONFIG_FILE(IERR)
C
	CHARACTER DATES*11,TIMES*8,LABEL(8)*6,NAME*512
	INCLUDE 'FILES.INC'
	COMMON/DEFAULTFILE/IDEF_UNIT
	DATA LABEL/'RUN   ','EXP   ','PRINT ','INPUT ','OUTPUT',
	1		   'INFORM','OFORM ','INCOMM'/
C
C OPEN THE DEFAULTS FILE
	IERR=0
	CALL OPEN_DEFAULT(IERR)
	IF(IERR .EQ. -1)THEN
C
C CANNOT OPEN THE FILE: ACTION WILL DEPEND ON WHICH CALLING PROGRAM WE ARE IN
C
		RETURN
	ENDIF
C
C OK FILE IS READY
C
C PREPARE AND WRITE THE HEADER
	CALL DATE(DATES)
	CALL TIME(TIMES)
	WRITE(IDEF_UNIT,10,err=90)DATES,TIMES
10	FORMAT(7X,'This is the configuration file for Absorb'/
	1       7X,'Created on: ',a11,' at ',a8/)
C
C WRITE THE CONTROL CARD FOR EXECUTION
C
	WRITE(IDEF_UNIT,30,ERR=90)LABEL(1),IABS_RUN
	
c
C	WRITE THE LONG FILE NAMES WITH LABELS
C
	DO I=1,4
		fname(i)=adjustl(fname(i))
		J=LEN_TRIM(FNAME(I))
		name=fname(i)(1:j)
		WRITE(IDEF_UNIT,20,err=90)LABEL(I+1),NAME(1:J)
20		FORMAT(1X,A6,1X,A)
	ENDDO
C
C WRITE THE FORMAT
C
	WRITE(IDEF_UNIT,30,ERR=90)LABEL(6),IDFORM_IN
	WRITE(IDEF_UNIT,30,ERR=90)LABEL(7),IDFORM_OUT
	WRITE(IDEF_UNIT,30,ERR=90)LABEL(8),ICFLAG
30	FORMAT(1X,A6,I2)

	CALL CLOSE_DEFAULT
	RETURN
90	IERR=2			! write error
	RETURN
	END
****************************************************************************
C
	SUBROUTINE READ_CONFIG_FILE(IERR)
C
	CHARACTER STRING*512
	include 'files.inc'
	COMMON/DEFAULTFILE/IDEF_UNIT
C
C
	FNAME=' '
C OPEN THE DEFAULTS FILE
	IERR=0
	ISEL=0		! SET ALL FILES UNSELECTED
	CALL OPEN_DEFAULT(IERR)
	IF(IERR .EQ. 1)RETURN		! DOES NOT EXIST 
	IF(IERR .EQ. -1)THEN		! DOES NOT EXIST 
		RETURN					! 
	ENDIF
C
C LOOP OVER LINES IN CONFIG FILE
C
1	READ(IDEF_UNIT,10,END=999,ERR=990)STRING
10	FORMAT(A)	
C
	do k=1,6
		ino=ichar(STRING(k:k))
		if(ino .gt. 96)STRING(k:k)=char(ino-32)
	enddo
C
	IF(INDEX(STRING(1:6),'EXP') .NE. 0)THEN
		READ(STRING(7:512),'(A)',ERR=990,END=1)FNAME(1)
	ELSEIF(INDEX(STRING(1:6),'PRINT') .NE. 0)THEN
		READ(STRING(7:512),'(A)',ERR=990,END=1)FNAME(2)
	ELSEIF(INDEX(STRING(1:6),'INPUT') .NE. 0)THEN
		READ(STRING(7:512),'(A)',ERR=990,END=1)FNAME(3)
	ELSEIF(INDEX(STRING(1:6),'OUTPUT') .NE. 0)THEN
		READ(STRING(7:512),'(A)',ERR=990,END=1)FNAME(4)
	ELSEIF(INDEX(STRING(1:6),'INFORM') .NE. 0)THEN
		READ(STRING(7:512),*,ERR=990,END=1)IDFORM_IN
	ELSEIF(INDEX(STRING(1:6),'OFORM') .NE. 0)THEN
		READ(STRING(7:512),*,ERR=990,END=1)IDFORM_OUT
	ELSEIF(INDEX(STRING(1:6),'INCOMM') .NE. 0)THEN
		READ(STRING(7:512),*,ERR=990,END=1)ICFLAG
	ELSEIF(INDEX(STRING(1:6),'RUN') .NE. 0)THEN
		READ(STRING(7:512),*,ERR=990,END=1)IABS_RUN
	ENDIF
	GOTO 1
999	CALL CLOSE_DEFAULT
C
C NOW EXTRACT NAMES ETC
C
	DO I=1,4
		FNAME(I)=ADJUSTL(FNAME(I))		! REMOVES LEADING BLANKS
		ILEN(I)=LEN_TRIM(FNAME(I))
		IF(ILEN(I) .GT. 0)THEN
			J=INDEX(FNAME(I),'\',BACK=.TRUE.)
			IF(J .EQ. 0)J=INDEX(FNAME(I),'/',BACK=.TRUE.)
			IF(J .NE. 0 .AND. J .LT. ILEN(I))THEN
				SHORTNAME(I)=FNAME(I)(J+1:ILEN(I))
				DIR(I)=FNAME(I)(1:J)	
			ENDIF
		ENDIF
	ENDDO
C
C DO SOME CHECKS ON VALUES AND SET SENSIBLE DEFAULTS
C
C IABS_RUN
	IF(IABS_RUN .LT. 0 .OR. IABS_RUN .GT. 1)IABS_RUN=0
C
C  INPUT FORMAT NUMBER
C
	IF(IDFORM_IN .LT. 1 .OR. IDFORM_IN .GT. 3)IERR=3

C
C  OUTPUT FORMAT NUMBER
C
	IF(IDFORM_OUT .LT. 1 .OR. IDFORM_OUT .GT. 4)IERR=4
							
	RETURN
C SOME READ ERROR
990	IERR=2
	GOTO 1
	END