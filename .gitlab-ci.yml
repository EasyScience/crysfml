stages:
  - make

#===============

make:linux_gfortran:
  stage: make
  script:
    - docker build --force-rm -t ci_crysfml_xenial_gfortran -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_setup_xenial_gfortran .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_build_gfortran_${CI_COMMIT_SHORT_SHA} -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_build_xenial_gfortran .
    - docker run ci_crysfml_xenial_build_gfortran_${CI_COMMIT_SHORT_SHA}
  tags:
    - sci
    - ubuntu
    
make:linux_ifort:
  stage: make
  script:
    - docker build --force-rm -t ci_crysfml_xenial_ifort -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_setup_xenial_ifort .
    - docker build --force-rm --no-cache -t ci_crysfml_xenial_build_ifort_${CI_COMMIT_SHORT_SHA} -f ${CI_PROJECT_DIR}/BuildServer/Docker/Dockerfile_build_xenial_ifort .
    - docker run -v /home/ci/intel:/opt/intel ci_crysfml_xenial_build_ifort_${CI_COMMIT_SHORT_SHA}
  tags:
    - sci
    - ubuntu
    
#===============

make:macos_gfortran:
  stage: make
  script:
    - BuildServer/Unix/build.sh gfortran
  tags:
    - sci
    - osx-10.13
    
make:macos_ifort:
  stage: make
  script:
    - BuildServer/Unix/build.sh ifort
  tags:
    - sci
    - osx-10.13   

#===============

make:windows_gfortran:
  stage: make
  script:
    - call "%BuildServer\\Windows\\build.bat" gfortran
  tags:
    - sci
    - windows-10
    
make:windows_ifort:
  stage: make
  script:
    - call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"
    - set LIB="C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.3.203\\windows\\compiler\\lib\\intel64_win";%LIB%
    - call "%BuildServer\\Windows\\build.bat" ifort
  tags:
    - sci
    - windows-10