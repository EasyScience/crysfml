# Adapted from https://github.com/RalfG/python-wheels-manylinux-build/blob/master/full_workflow_example.yml
name: Build and (soon Publish Linux Python packages)

on:
  push:
    branches: [ simon ]

jobs:
  create-Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build manylinux wheels
      run:  docker run -e PLAT=manylinux2010_x86_64 -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /io/buildscript.sh

    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML - Linux
        path: ${{ github.workspace }}/dist/*.whl

  create-Others:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [macos-10.15, macos-11.0, windows-latest]
        gcc_v: [ 10 ] # Version of GFortran we want to use.
        exclude:
#          - os: windows-latest
#            python-version: '3.6'
          - os: macos-10.15
            python-version: '3.6'
          - os: macos-11.0
            python-version: '3.6'
          - os: macos-11.0
            python-version: '3.7'

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}

#    - name: Set Compiler (OSX)
#      run: |
#        echo "FC=gfortran-${{ matrix.gcc_v }}" >> $GITHUB_ENV
#        echo "CC=gcc-${{ matrix.gcc_v }}" >> $GITHUB_ENV

    - name: Install cmake
      run: pip3 install cmake delocate

    - name: Build CFML
      run: pip wheel ./ --no-deps -w ./dist/

    - name: Fix Wheel
      if: contains(matrix.os, 'macos')
      run: delocate-wheel -w fixed_wheels -v ./dist/*.whl

    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML - ${{ matrix.os }} - Python ${{ matrix.python-version }}
        path: ./fixed_wheels/*.whl